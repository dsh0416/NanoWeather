<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <title>Circles</title>
  <style>
      html, body {
          height: 100%;
          margin: 0;
          padding: 0;
      }
      #map {
          height: 100%;
      }
  </style>
</head>
<body>
<div id="map"></div>
<script>

    // This example creates circles on the map, representing populations in North
    // America.

    // First, create an object containing LatLng and population for each city.
    var citymap = {

        <%
            db = Mongo::Client.new('mongodb://hacker:hacker@localhost:27017/admin')
            collection_vd = db['vd_info']
            collection_sensor = db['sensor_info']

            ans = Array.new

            collection_sensor.find.to_a.each do |sensor|
                count = 0
                collection_vd.find(SessionId:sensor[:SessionId]).sort(time:-1).limit(5).to_a.each do |vd|
                    count = vd[:AvgOcc].to_i
                end
                count /= 10
                ans << {Lat:sensor[:StartWgsY],Lng:sensor[:StartWgsX],weight:count}
            end

        %>
        <% ans.each do |location| %>
        <%= "#{rand(999999)}: {center: {lat: #{location[:Lat]}, lng:#{location[:Lng]}}, population: #{location[:weight]}}," %>
        <% end %>
        vancouver: {
            center: {lat: 49.25, lng: -123.1},
            population: 0
        }
    };

    function initMap() {
        // Create the map.
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: {lat: 25.047073 , lng: 121.536185},
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        // Construct the circle for each value in citymap.
        // Note: We scale the area of the circle based on the population.
        for (var city in citymap) {
            // Add the circle for this city to the map.
            var cityCircle = new google.maps.Circle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                center: citymap[city].center,
                radius: Math.sqrt(citymap[city].population) * 100
            });
        }
    }

</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?signed_in=true&callback=initMap"></script>
</body>
</html>